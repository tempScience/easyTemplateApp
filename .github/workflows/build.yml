name: CI

# Controls when the action will run. Triggers the workflow on push events
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:

    # Build matrix for different platforms
    #strategy:
    #  matrix:
    #    os: [macos-latest, windows-latest, ubuntu-latest]

    # The type of runner that the job will run on
    runs-on: windows-latest #${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v2

    # Sets env variables
    - name: Set env variables
      #run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
      run: echo ::set-env name=RELEASE_VERSION::develop

    # Print variables
    #- name: Print variables
    #  run: |
    #    echo $RELEASE_VERSION
    #    echo ${{ env.RELEASE_VERSION }}
    #    echo ${{ matrix.os }}
    #    echo ${{ runner.os }}
    #    echo $RUNNER_OS

    # Sets up a Python environment
    - uses: actions/setup-python@v2
      with:
          python-version: 3.7

    # Sets up a Poetry
    - uses: Gr1N/setup-poetry@v2

    # Runs a single command using the runners shell
    - name: Create venv and install dependences
      run: poetry update

    # Runs a set of commands using the runners shell
    - name: Set up PyInstaller
      run: |
        poetry add macholib
        poetry add pyinstaller
    - name: Set up PyInstaller (extra)
      if: runner.os == 'Windows'
      run: |
      poetry add pywin32-ctypes
      poetry add pefile

    # Runs a single command using the runners shell
    - name: Freeze python app
      run: poetry run python Tools/Scripts/FreezeApp.py

    # Runs a single command using the runners shell
    - name: Remove folder
      run: rm -rf dist/easyTemplate/

    # Creates release zip archive
    - uses: papeloto/action-zip@v1
      with:
        files: dist #dist/easyTemplate.app
        recursive: true
        dest: easyTemplate-${{ runner.os }}-${{ env.RELEASE_VERSION }}.zip

    # Creates GitHub Releases
    - name: Upload artifacts to GitHub releases
      uses: ncipollo/release-action@v1
      with:
        draft: true
        prerelease: true
        allowUpdates: true
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        commit: ${{ env.RELEASE_VERSION }}
        tag: ${{ env.RELEASE_VERSION }}
        artifacts: "easyTemplate-*.zip"
