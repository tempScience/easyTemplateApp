name: CI

# Controls when the action will run. Triggers the workflow on push events
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  build:
    
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v2
    
    # Sets env variables
    - name: Set env variables
      run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
    #- name: Test
    #  run: |
    #    echo $RELEASE_VERSION
    #    echo ${{ env.RELEASE_VERSION }}

    # Sets up a Python environment
    - uses: actions/setup-python@v2
      with:
          python-version: 3.7

    # Sets up a Poetry
    - uses: Gr1N/setup-poetry@v2

    # Runs a set of commands using the runners shell
    #- name: Print variables/versions
    #  run: |
    #    python --version
    #    pip --version
    #    poetry --version

    # Runs a single command using the runners shell
    - name: Creates venv and install dependences
      run: poetry update

    # Runs a set of commands using the runners shell
    - name: Sets up PyInstaller
      run: |
        poetry add macholib
        poetry add pyinstaller

    # Runs a single command using the runners shell
    - name: Freezes python app
      run: poetry run python Tools/Scripts/FreezeApp.py

    # Runs a single command using the runners shell
    - name: Remove folder
      run: rm -rf dist/easyTemplate/

    # Creates release zip archive
    - uses: papeloto/action-zip@v1
      with:
        files: dist #dist/easyTemplate.app
        recursive: true
        dest: easyTemplate-macos-${{ env.RELEASE_VERSION }}.zip

    # Creates GitHub Releases 
    - name: Upload artifacts to GitHub releases
      uses: ncipollo/release-action@v1
      with:
        draft: true
        prerelease: true
        allowUpdates: true
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}      
        commit: ${{ env.RELEASE_VERSION }}
        tag: ${{ env.RELEASE_VERSION }}
        artifacts: easyTemplate-macos-${{ env.RELEASE_VERSION }}.zip
